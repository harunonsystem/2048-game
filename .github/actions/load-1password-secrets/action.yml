name: 'Load 1Password Secrets'
description: 'Load secrets from 1Password vault with proper error handling'
inputs:
  service-account-token:
    description: '1Password service account token'
    required: true
  cloudflare-account-id-ref:
    description: '1Password reference for Cloudflare Account ID'
    required: true
    default: 'op://harunonpj/CLOUDFLARE_ACCOUNT_ID/harunonpj'
  cloudflare-api-token-ref:
    description: '1Password reference for Cloudflare API Token'
    required: true
    default: 'op://harunonpj/CLOUDFLARE_API_TOKEN/harunonpj'
  export-env:
    description: 'Export secrets as environment variables'
    required: false
    default: 'true'
outputs:
  CLOUDFLARE_API_TOKEN:
    description: 'Cloudflare API Token loaded from 1Password'
    value: ${{ steps.op-load-secret.outputs.CLOUDFLARE_API_TOKEN }}
  CLOUDFLARE_ACCOUNT_ID:
    description: 'Cloudflare Account ID loaded from 1Password'
    value: ${{ steps.op-load-secret.outputs.CLOUDFLARE_ACCOUNT_ID }}
runs:
  using: 'composite'
  steps:
    - name: Load 1Password secrets
      id: op-load-secret
      uses: 1password/load-secrets-action@v2
      with:
        export-env: false
        service-account-token: ${{ inputs.service-account-token }}
      env:
        CLOUDFLARE_ACCOUNT_ID: ${{ inputs.cloudflare-account-id-ref }}
        CLOUDFLARE_API_TOKEN: ${{ inputs.cloudflare-api-token-ref }}
      
    - name: Verify secrets loaded
      shell: bash
      run: |
        echo "CLOUDFLARE_ACCOUNT_ID ${{ steps.op-load-secret.outputs.CLOUDFLARE_ACCOUNT_ID }}"

    - name: Output secrets as environment variables
      if: ${{ inputs.export-env == 'true' }}
      shell: bash
      run: |
        echo "Exporting secrets as environment variables"
        echo "CLOUDFLARE_ACCOUNT_ID=${{ steps.op-load-secret.outputs.CLOUDFLARE_ACCOUNT_ID }}" >> $GITHUB_ENV
