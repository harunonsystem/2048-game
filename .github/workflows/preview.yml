name: Deploy to Preview

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    environment: preview
    permissions:
      contents: read
      actions: read
      pull-requests: write
      issues: write

    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup Node.js and Dependencies
        uses: ./.github/actions/setup-node-deps

      - name: Test and Build
        uses: ./.github/actions/test-and-build
        with:
          run-e2e: "true"

      - name: TypeScript check
        run: npm run typecheck

      - name: Update wrangler.toml for preview
        if: github.event_name == 'pull_request'
        run: |
          # preview環境の名前を動的に設定
          sed -i '/\[env\.preview\]/a name = "2048-game-pr-${{ github.event.pull_request.number }}"' wrangler.toml
          echo "Updated wrangler.toml:"
          cat wrangler.toml

      - name: Load development secrets
        id: load-secrets
        uses: ./.github/actions/load-1password-secrets
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      - name: Deploy to Preview
        id: deploy
        uses: cloudflare/wrangler-action@da0e0dfe58b7a431659754fdf3f186c529afbe65 # v3.14.1
        with:
          apiToken: ${{ steps.load-secrets.outputs.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ steps.load-secrets.outputs.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy -e preview

      - name: Set deploy outputs
        if: github.event_name == 'pull_request'
        id: set-outputs
        run: |
          if [ "${{ steps.deploy.outcome }}" == "success" ]; then
            # PR番号からURLを生成
            PR_NUMBER=${{ github.event.pull_request.number }}
            DEPLOY_URL="https://2048-game-pr-${PR_NUMBER}.harunonsystem.workers.dev"
            echo "url=${DEPLOY_URL}" >> $GITHUB_OUTPUT
            echo "success=true" >> $GITHUB_OUTPUT
            echo "Deployment successful: ${DEPLOY_URL}"
          else
            echo "success=false" >> $GITHUB_OUTPUT
            echo "error_message=Deployment failed - check workflow logs for details" >> $GITHUB_OUTPUT
            echo "Deployment failed"
          fi

      - name: Comment PR
        uses: actions/github-script@f28e40c7f34bde8b3046d885e986cb6290c5673b # v7.1.0
        if: github.event_name == 'pull_request' && always()
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const deployedUrl = '${{ steps.set-outputs.outputs.url }}';
            const deploySuccess = '${{ steps.set-outputs.outputs.success }}' === 'true';
            const errorMessage = '${{ steps.set-outputs.outputs.error_message }}';
            const fallbackUrl = `https://2048-game-pr-${prNumber}.harunonsystem.workers.dev`;
            const previewUrl = deployedUrl || fallbackUrl;

            const statusIcon = deploySuccess ? '✅' : '❌';
            const statusText = deploySuccess ? 'Success' : 'Failed';

            let body = `## 🚀 Preview Deployment

            **Preview URL:** ${deploySuccess ? `[${previewUrl}](${previewUrl})` : '[Deploy failed - check logs](https://github.com/${{ github.repository }}/actions)'}

            **Build Status:** ${statusIcon} ${statusText}
            **Commit:** ${context.sha.substring(0, 7)}
            **Branch:** \`${context.payload.pull_request.head.ref}\`

            ${deploySuccess ? 'This preview will be automatically updated when you push new commits to this PR.' : 'Please check the workflow logs for details.'}`;

            // Find existing comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const existingComment = comments.data.find(
              comment => comment.user.login === 'github-actions[bot]' &&
                         comment.body.includes('🚀 Preview Deployment')
            );

            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: body
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: body
              });
            }
